<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于Hexo+GitHub_Gitee搭建个人博客</title>
    <url>/2021/06/22/%E5%9F%BA%E4%BA%8EHexo+GitHub_Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p>自由和山巅上的空气相似，对弱者都是吃不消的。<br>    </p><p align="right">——芥川龙之介 《侏儒的话》。</p><p></p>
</blockquote>
<hr>

<h1 id="预备工作"><a href="#预备工作" class="headerlink" title="预备工作"></a>预备工作</h1><h2 id="1、安装-Node-js"><a href="#1、安装-Node-js" class="headerlink" title="1、安装 Node.js"></a>1、安装 Node.js</h2><p> <a href="https://nodejs.org/">官网下载链接地址：</a><a href="https://nodejs.org/">https://nodejs.org</a></p>
<p><font face="楷体">选择当前的LTS版本</font><br><img src="https://img-blog.csdnimg.cn/20210111162259365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="选择当前的LTS版本"><br><font face="楷体">安装步骤非常简单，一直next，下一步就可以了，默认安装就行。</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v		//查看node.js版本，验证是否安装成功</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021011116350191.png#pic_center" alt="node.js版本"></p>
<hr>

<h2 id="2、安装-Git"><a href="#2、安装-Git" class="headerlink" title="2、安装 Git"></a>2、安装 Git</h2><p><font face="楷体"> <a href="https://git-scm.com/downloads">官网下载链接地址：</a><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></font><br><img src="https://img-blog.csdnimg.cn/20210111170302943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="下载Windows最新版git"><br><font face="楷体">选择当前的最新版本</font></p>
<blockquote>
<p>具体win10下git安装过程参考：<a href="https://blog.csdn.net/Deng872347348/article/details/111883306">https://blog.csdn.net/Deng872347348/article/details/111883306</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version			//查看当前git版本，验证git是否安装成功</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210111171820594.png#pic_center" alt="git版本查看"></p>
<blockquote>
<p><strong>Tips</strong>：这个Git Bash下载下来就相当于Linux中的终端窗口了，以后我们就用这个来打开终端。</p>
</blockquote>
<hr>

<h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><h2 id="创建blog本地目录"><a href="#创建blog本地目录" class="headerlink" title="创建blog本地目录"></a>创建blog本地目录</h2><p><font face="楷体">新建一个文件夹，比如我这里建了 ==Hexoblog==<br>打开你的文件夹，然后在空白处点鼠标的右键，选择 ==Git Bash Here==</font></p>
<p><font face="楷体">看看 ==node，npm== 是否安装成功，没有成功的就重新安装node。</font><br><img src="https://img-blog.csdnimg.cn/20210111190015814.png#pic_center" alt="node &amp; npm"></p>
<hr>

<h2 id="Node-js换源"><a href="#Node-js换源" class="headerlink" title="Node.js换源"></a>Node.js换源</h2><p><font face="楷体">Node.js 官方源：==<a href="http://registry.npmjs.org==，为避免网络问题，可将其替换为淘宝源：==http://npm.taobao.org==。">http://registry.npmjs.org==，为避免网络问题，可将其替换为淘宝源：==http://npm.taobao.org==。</a></font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p><font face="楷体">换源后测试cnpm，如果能输出相关介绍，则说明成功了：<code>cnpm </code></font></p>
<p><img src="https://img-blog.csdnimg.cn/20210111191904445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="cnpm"></p>
<hr>

<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli		// 通过npm全局安装hexo</span><br></pre></td></tr></table></figure>
<p><font face="楷体">其中，-g 指定全局安装，之后可以在任意位置使用 hexo 命令</font></p>
<ul>
<li><font face="楷体">验证是否安装成功：<code>hexo -v </code></font></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20210111192257365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="hexo"></p>
<ul>
<li><p><font face="楷体">首先看看当前路径：<code>pwd </code></font> </p>
</li>
<li><p><font face="楷体">然后我们运行命令<code>hexo init </code></font>  <font face="楷体">。这步是关键，主要是建立整个项目，这里我博客所在的文件夹（事先创建）名字是Hexoblog，文件夹位置是d盘根目录上。文件目录及其分析如下：</font><br><img src="https://img-blog.csdnimg.cn/20210111193753849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="hexo init"><br><img src="https://img-blog.csdnimg.cn/20210111193832725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="项目目录文件生成"><br><img src="https://img-blog.csdnimg.cn/20210111194639505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="hexo blog目录"></p>
</li>
</ul>
<p> <font face="楷体">其中，目录Hexoblog\source_posts下存放都为makedown（md）格式文件，也就是写好的blog文件。</font></p>
<font color="red">
Notes：也可以在git bash中完成目录创建，步骤如下</font>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init Hexoblog      <span class="comment"># 初始化创建，会在你所在位置创建 blog 文件夹</span></span><br><span class="line"><span class="built_in">cd</span> Hexoblog             <span class="comment"># 进入 blog 目录</span></span><br><span class="line">npm install         	<span class="comment"># 进一步安装hexo所需文件</span></span><br></pre></td></tr></table></figure>

<hr>

<h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><p> <font face="楷体">这里我们经常用到的有3个命令（第三个仅用于本地测试）</font> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean 		<span class="comment">#用来清理缓存文件</span></span><br><span class="line">hexo g          <span class="comment">#生成文件</span></span><br><span class="line">hexo  s     	<span class="comment">#运行本地服务器</span></span><br><span class="line">hexo  d   		<span class="comment">#上传到服务器</span></span><br></pre></td></tr></table></figure>
<p><font face="楷体">运行</font> <code>hexo s</code></p>
<p><img src="https://img-blog.csdnimg.cn/20210111195441749.png#pic_center" alt="hexo -s"></p>
<p><font face="楷体">接下来输入</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean                <span class="comment"># 清除所有记录</span></span><br><span class="line">hexo generate       	  <span class="comment"># 生成静态网页</span></span><br><span class="line">hexo server (-p 80可选)   <span class="comment"># 启动服务, -p 80 表示端口号为 80，默认不加端口号是 4000</span></span><br></pre></td></tr></table></figure>

<p><font face="楷体">然后，使用浏览器访问：<a href="http://localhost:80，就可以看到下面的界面了。">http://localhost:80，就可以看到下面的界面了。</a></font><br><img src="https://img-blog.csdnimg.cn/20210111195514688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><font face="楷体">至此说明本地环境搭建完成。</font> </p>
<hr>

<h2 id="主题替换"><a href="#主题替换" class="headerlink" title="主题替换"></a>主题替换</h2><blockquote>
<p>默认主题也不是说不好看，就是怕烂大街，谁不想在自己的地盘彰显点个性化呢…</p>
</blockquote>
<p><font face="楷体">官方提供的<a href="https://hexo.io/themes/">参考主题</a>：<a href="https://hexo.io/themes/%EF%BC%8C">https://hexo.io/themes/，</a> 这里以<a href="https://github.com/honjun/hexo-theme-sakura">Sakura主题</a>：<a href="https://github.com/honjun/hexo-theme-sakura%E4%B8%BA%E4%BE%8B">https://github.com/honjun/hexo-theme-sakura为例</a></font> </p>
<ul>
<li><font face="楷体">进入github点击下载zip：<a href="https://github.com/honjun/hexo-theme-sakura">https://github.com/honjun/hexo-theme-sakura</a></font></li>
<li><font face="楷体">将压缩包解压，并将其中theme文件夹拷贝至目录<code>Hexoblog/themes</code></font><br><img src="https://img-blog.csdnimg.cn/2021011120263117.jpg#pic_center" alt="sakura.zip"><br><img src="https://img-blog.csdnimg.cn/20210111202701105.jpg#pic_center" alt="unzip"><br><img src="https://img-blog.csdnimg.cn/20210111202725353.jpg#pic_center" alt="themes文件夹"></li>
<li><font face="楷体">修改配置文件：主题配置在Hexoblog主目录找到：_config.yml，记事本打开并修改默认theme: landscape为<code>theme:sakura</code></font></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20210111203315140.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="_config.yml"><br><img src="https://img-blog.csdnimg.cn/20210111203332435.jpg#pic_center" alt="Sakura"><br> <font face="楷体">接着，本地测试主题是否替换成功<font></font></font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g		//hexo generate</span><br><span class="line">hexo s		//hexo server</span><br></pre></td></tr></table></figure>
<hr>

<h1 id="Gitee配置"><a href="#Gitee配置" class="headerlink" title="Gitee配置"></a>Gitee配置</h1><blockquote>
<p>Gitee配置很简单，简要记录几点。<br>详细参考：<a href="https://blog.csdn.net/cungudafa/article/details/104260494">https://blog.csdn.net/cungudafa/article/details/104260494</a></p>
</blockquote>
<ul>
<li>新建的仓库名称必须和gitee用户名一致。</li>
<li>每次都需要记得手动更新Gitee端</li>
</ul>
<h2 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h2><p><img src="https://img-blog.csdnimg.cn/20210111215112437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="giteeblog"></p>
<blockquote>
<p>蛮酷的有没有…</p>
</blockquote>
<hr>

<h1 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h1><blockquote>
<p>Github配置大同小异，简要记录几点注意事项。<br>详细参考：<a href="https://www.jianshu.com/p/f9b213097c42">https://www.jianshu.com/p/f9b213097c42</a></p>
</blockquote>
<ul>
<li><p>出现<font color="red" face="楷体">nothing to commit, working tree clean，且网页404。</font><br><img src="https://img-blog.csdnimg.cn/20210111212745820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="404"><br>则hexo的提交命令使用：<code>hexo clean && hexo g && hexo d</code></p>
</li>
<li><p>GitHub新建仓库时，仓库名必须为用户名<code>.github.io</code></p>
</li>
<li><p>同时部署GitHub和Gitee的时候，_config_yml中deploy部分如下所示：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: </span><br><span class="line">        github: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">        gitee: https://gitee.com/用户名/用户名  //因为开启了强制HTTPS</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<ul>
<li>GitHub中新建的仓库code中必须要有README.md文件，不然还是会出现404。</li>
<li>内容只有放在在master分支里面的内容才能用github.io查看到</li>
</ul>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://img-blog.csdnimg.cn/20210111215219759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwMTIzNjk=,size_16,color_FFFFFF,t_70#pic_center" alt="githubpage"></p>
<hr>
接下来就是自由发挥的空间了，未完待续。。。
]]></content>
      <categories>
        <category>PersonalBlog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Gitee</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
